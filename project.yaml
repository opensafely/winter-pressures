version: "3.0"

expectations:
  population_size: 5000

actions:

  monthly_practice_listsize_2018:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_listsize_monthly
        --index-date-range '2018-06-01 to 2019-05-31 by month' --output-dir=output/listsize
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/listsize/input_listsize_monthl*.feather

  monthly_practice_listsize_2019:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_listsize_monthly
        --index-date-range '2019-06-01 to 2020-05-31 by month' --output-dir=output/listsize
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/listsize/input_listsize_month*.feather

  monthly_practice_listsize_2020:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_listsize_monthly
        --index-date-range '2020-06-01 to 2021-05-31 by month' --output-dir=output/listsize
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/listsize/input_listsize_mont*.feather

  monthly_practice_listsize_2021:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_listsize_monthly
        --index-date-range '2021-06-01 to 2022-12-31 by month' --output-dir=output/listsize
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/listsize/input_listsize_mon*.feather

  monthly_practice_listsize_measures:
    run: cohortextractor:latest generate_measures --study-definition study_definition_listsize_monthly --output-dir=output/listsize
    needs:
    - monthly_practice_listsize_2018
    - monthly_practice_listsize_2019
    - monthly_practice_listsize_2020
    - monthly_practice_listsize_2021
    outputs:
      moderately_sensitive:
        measure_csv: output/listsize/measure_*.csv


  # Other data
  # ----------
  # Add actions for other data to this section. Prefix them with a suitable name; place
  # scripts in a similarly named sub-directory of the analysis directory; write outputs
  # to a similarly named sub-directory of the output directory.
  #
  # For example, let's call our other data "metrics". We would prefix our actions
  # "metrics_"; we would place our scripts in analysis/metrics; we would write outputs
  # to output/metrics.

  metrics_monthly_sro_data:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_sro_monthly
        --index-date-range '2018-06-01 to 2022-12-31 by month' --output-dir=output/metrics/monthly
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/metrics/monthly/input_sro_monthly*.feather

  metrics_monthly_sro_data_measures:
    run: cohortextractor:latest generate_measures --study-definition study_definition_sro_monthly --output-dir=output/metrics/monthly
    needs:
    - metrics_monthly_sro_data
    outputs:
      moderately_sensitive:
        measure_csv: output/metrics/monthly/measure_*.csv

  metrics_monthly_kids_data:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_kids_monthly
        --index-date-range '2018-06-01 to 2022-12-31 by month' --output-dir=output/metrics/monthly
        --output-format=feather
    outputs:
      highly_sensitive:
        extract: output/metrics/monthly/input_kids_monthly*.feather

  metrics_monthly_kids_data_measures:
    run: cohortextractor:latest generate_measures --study-definition study_definition_kids_monthly --output-dir=output/metrics/monthly
    needs:
    - metrics_monthly_kids_data
    outputs:
      moderately_sensitive:
        measure_csv: output/metrics/monthly/measure*.csv

  metrics_generate_deciles_charts:
    run: >
      deciles-charts:v0.0.33
        --input-files output/metrics/monthly/measure_*.csv
        --output-dir output/metrics
    config:
      show_outer_percentiles: true
    needs:
      - metrics_monthly_sro_data_measures
      - metrics_monthly_kids_data_measures
    outputs:
      moderately_sensitive:
        deciles_charts: output/metrics/deciles_chart_*.png
        deciles_tables: output/metrics/deciles_table_*.csv



  # Metrics data extraction
  # ------------
  metrics_generate_sro_dataset_winter:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_sro
      --param start_date='2021-12-01' --param end_date='2022-03-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_sro_2021-12-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_sro_2021-12-01.feather

  metrics_generate_sro_dataset_summer:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_sro
      --param start_date='2021-06-01' --param end_date='2021-09-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_sro_2021-06-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_sro_2021-06-01.feather

  metrics_generate_kids_dataset_winter:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_kids
      --param start_date='2021-12-01' --param end_date='2022-03-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_kids_2021-12-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_kids_2021-12-01.feather

  metrics_generate_kids_dataset_summer:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_kids
      --param start_date='2021-06-01' --param end_date='2021-09-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_kids_2021-06-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_kids_2021-06-01.feather

  metrics_generate_endpopulation_dataset_winter:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_endpopulation
      --param start_date='2021-12-01' --param end_date='2022-03-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_endpopulation_2021-12-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_endpopulation_2021-12-01.feather

  metrics_generate_endpopulation_dataset_summer:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_endpopulation
      --param start_date='2021-06-01' --param end_date='2021-09-30' --output-dir=output/metrics
      --output-format=feather --output-file output/metrics/input_endpopulation_2021-06-01.feather
    outputs:
      highly_sensitive:
        extract: output/metrics/input_endpopulation_2021-06-01.feather

  metrics_generate_sro_measures:
    run: cohortextractor:latest generate_measures --param start_date='2021-06-01'
      --param end_date='2021-09-30' --study-definition study_definition_sro --output-dir=output/metrics
    needs:
    - metrics_generate_sro_dataset_summer
    - metrics_generate_sro_dataset_winter
    outputs:
      moderately_sensitive:
        measure_csv: output/metrics/mea*.csv

  metrics_generate_kids_measures:
    run: cohortextractor:latest generate_measures --param start_date='2021-06-01'
      --param end_date='2021-09-30' --study-definition study_definition_kids --output-dir=output/metrics
    needs:
    - metrics_generate_kids_dataset_summer
    - metrics_generate_kids_dataset_winter
    outputs:
      moderately_sensitive:
        measure_csv: output/metrics/me*.csv

  metrics_generate_endpopulation_measures:
    run: cohortextractor:latest generate_measures --param start_date='2021-06-01'
      --param end_date='2021-09-30' --study-definition study_definition_endpopulation
      --output-dir=output/metrics
    needs:
    - metrics_generate_endpopulation_dataset_summer
    - metrics_generate_endpopulation_dataset_winter
    outputs:
      moderately_sensitive:
        measure_csv: output/metrics/m*.csv

  metrics_create_seasonal_data:
    run: r:latest analysis/metrics/create_seasonal_data.R
    needs:
    - metrics_generate_sro_measures
    - metrics_generate_kids_measures
    outputs:
      highly_sensitive:
        csv: output/metrics/season_data_*.csv

  metrics_create_seasonal_measures:
    run: r:latest analysis/metrics/seasonal_measures.R
    needs:
    - metrics_create_seasonal_data
    - appointments_generate_seasonal_summaries_by_booked_month
    - appointments_generate_seasonal_summaries_by_start_month
    outputs:
      moderately_sensitive:
        raw_csv: output/*/*/summer_winter_all_metrics.csv
        plot_csv: output/*/*/summer_winter_*_histogram_data.csv
        plot_png: output/*/*/summer_winter_*_histogram.png

  metrics_run_sro_tests:
    run: r:latest analysis/metrics/tests/testthat/run-all.R
    needs: [metrics_generate_sro_measures]
    outputs:
      moderately_sensitive:
        log: output/metrics/tests/run-all.log

    

  # Appointments data
  # -----------------
  appointments_generate_dataset_sql:
    run: >
      sqlrunner:latest
        analysis/appointments/dataset_query.sql
        --output output/appointments/dataset_long.csv.gz
        --dummy-data-file analysis/appointments/dummy_dataset_long.csv.gz
    outputs:
      highly_sensitive:
        dataset: output/appointments/dataset_long.csv.gz

  # appointments_generate_dataset:
  #   run: >
  #     databuilder:v0
  #       generate-dataset
  #       analysis/appointments/dataset_definition.py
  #       --output output/appointments/dataset_wide.arrow
  #   outputs:
  #     highly_sensitive:
  #       dataset: output/appointments/dataset_wide.arrow

  # appointments_get_freq_na_values:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.get_freq_na_values
  #   needs: [appointments_generate_dataset]
  #   outputs:
  #     moderately_sensitive:
  #       dataset: output/appointments/freq_na_values.csv

  # appointments_reshape_dataset:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.reshape_dataset
  #   needs: [appointments_generate_dataset]
  #   outputs:
  #     highly_sensitive:
  #       dataset: output/appointments/dataset_long.arrow

  # appointments_generate_lead_time_measure_by_booked_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_median_lead_time_measure
  #       --value-col lead_time_in_days
  #       --index-cols booked_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_median_lead_time_in_days_by_booked_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_median_lead_time_in_days_by_booked_month.csv

  # appointments_generate_lead_time_measure_by_start_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_median_lead_time_measure
  #       --value-col lead_time_in_days
  #       --index-cols start_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_median_lead_time_in_days_by_start_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_median_lead_time_in_days_by_start_month.csv

  # appointments_generate_num_appointments_measure_by_start_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_num_appointments_measure
  #       --index-cols start_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_num_appointments_by_start_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_num_appointments_by_start_month.csv

  # appointments_generate_num_appointments_measure_by_booked_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_num_appointments_measure
  #       --index-cols booked_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_num_appointments_by_booked_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_num_appointments_by_booked_month.csv

  # appointments_generate_num_unique_patients_measure_by_booked_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_num_unique_patients_measure
  #       --unique-col patient_id
  #       --index-cols booked_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_num_unique_patients_by_booked_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_num_unique_patients_by_booked_month.csv

  # appointments_generate_num_unique_patients_measure_by_start_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_num_unique_patients_measure
  #       --unique-col patient_id
  #       --index-cols start_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_num_unique_patients_by_start_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_num_unique_patients_by_start_month.csv

  # appointments_generate_proportion_same_day_lead_time_measure_by_booked_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_proportion_lead_time_measure
  #       --value-col lead_time_in_days
  #       --value-threshold 0
  #       --index-cols booked_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_proportion_lead_time_in_days_within_0days_by_booked_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_proportion_lead_time_in_days_within_0days_by_booked_month.csv

  # appointments_generate_proportion_same_day_lead_time_measure_by_start_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_proportion_lead_time_measure
  #       --value-col lead_time_in_days
  #       --value-threshold 0
  #       --index-cols start_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_proportion_lead_time_in_days_within_0days_by_start_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_proportion_lead_time_in_days_within_0days_by_start_month.csv


  # appointments_generate_proportion_two_day_lead_time_measure_by_booked_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_proportion_lead_time_measure
  #       --value-col lead_time_in_days
  #       --value-threshold 2
  #       --index-cols booked_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_proportion_lead_time_in_days_within_2days_by_booked_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_proportion_lead_time_in_days_within_2days_by_booked_month.csv

  # appointments_generate_proportion_two_day_lead_time_measure_by_start_month:
  #   run: >
  #     python:latest
  #       python
  #       -m analysis.appointments.generate_proportion_lead_time_measure
  #       --value-col lead_time_in_days
  #       --value-threshold 2
  #       --index-cols start_month practice
  #   needs: [appointments_generate_dataset_sql]
  #   outputs:
  #     moderately_sensitive:
  #       monthly_measure: output/appointments/measure_monthly_proportion_lead_time_in_days_within_2days_by_start_month.csv
  #       seasonal_measure: output/appointments/measure_seasonal_proportion_lead_time_in_days_within_2days_by_start_month.csv

  appointments_generate_monthly_measures_by_booked_month:
    run: >
      python:latest
        python
        -m analysis.appointments.generate_appointment_monthly_measures
        --value-thresholds 0 2
        --index-cols booked_month practice
    needs: [appointments_generate_dataset_sql]
    outputs:
      highly_sensitive:
        monthly_measure: output/appointments/measure_monthly_*_by_booked_month.csv


  appointments_generate_monthly_measures_by_start_month:
    run: >
      python:latest
        python
        -m analysis.appointments.generate_appointment_monthly_measures
        --value-thresholds 0 2
        --index-cols start_month practice
    needs: [appointments_generate_dataset_sql]
    outputs:
      highly_sensitive:
        monthly_measure: output/appointments/measure_monthly_*_by_start_month.csv

  
  appointments_generate_seasonal_summaries_by_start_month:
    run: >
      python:latest
        python
        -m analysis.appointments.generate_appointment_seasonal_summaries
        --value-thresholds 0 2
        --index-cols start_month practice
    needs: [appointments_generate_dataset_sql]
    outputs:
      highly_sensitive:
        monthly_measure: output/appointments/measure_seasonal_*_by_start_month.csv


  appointments_generate_seasonal_summaries_by_booked_month:
    run: >
      python:latest
        python
        -m analysis.appointments.generate_appointment_seasonal_summaries
        --value-thresholds 0 2
        --index-cols booked_month practice
    needs: [appointments_generate_dataset_sql]
    outputs:
      highly_sensitive:
        monthly_measure: output/appointments/measure_seasonal_*_by_booked_month.csv

  ### Some of the measures need to be normalised by list size, specifically
  ### anything that starts with 'measure_monthly_num'
  appointments_generate_normalised_counts:
    run: r:latest analysis/normalise_counts.R
    needs:
      - appointments_generate_monthly_measures_by_booked_month
      - appointments_generate_monthly_measures_by_start_month
      - monthly_practice_listsize_measures
    outputs:
      highly_sensitive:
        normalised_csvs: output/appointments/measure_monthly_normalised_*.csv

  appointments_generate_deciles_charts:
    run: >
      deciles-charts:v0.0.33
        --input-files output/appointments/measure_monthly_*.csv
        --output-dir output/appointments
    config:
      show_outer_percentiles: true
    needs:
      - appointments_generate_monthly_measures_by_booked_month
      - appointments_generate_monthly_measures_by_start_month
      - appointments_generate_normalised_counts
    outputs:
      moderately_sensitive:
        deciles_charts: output/appointments/deciles_chart_*.png
        deciles_tables: output/appointments/deciles_table_*.csv

  run_tests:
      run: python:latest python -m pytest --junit-xml=output/pytest.xml --verbose
      outputs:
        moderately_sensitive:
          log: output/pytest.xml

  # Combining data
  # -----------------
  combine_seasonal_data:
    run: r:latest analysis/combine_seasonal_data.R
    needs:
    - metrics_create_seasonal_measures
    - appointments_generate_seasonal_summaries_by_booked_month
    - appointments_generate_seasonal_summaries_by_start_month
    outputs:
      moderately_sensitive:
        csv: output/combined/combined_seasonal_data.csv
